"""empty message

Revision ID: 4c0accdc7392
Revises: None
Create Date: 2014-10-21 16:56:40.597093

"""

# revision identifiers, used by Alembic.
revision = '4c0accdc7392'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy import DDL

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tbl_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_name', sa.Unicode(length=50), nullable=True),
    sa.Column('display_name', sa.Unicode(length=50), nullable=True),
    sa.Column('email', sa.Unicode(length=80), nullable=True),
    sa.Column('password', sa.Unicode(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login_name')
    )
    op.create_table('tbl_concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('eng', sa.Unicode(length=128), nullable=True),
    sa.Column('fra', sa.Unicode(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_scan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('concept_fkey', sa.Integer(), nullable=True),
    sa.Column('scan_name', sa.Unicode(length=256), nullable=True),
    sa.Column('uploader_fkey', sa.Integer(), nullable=True),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['concept_fkey'], ['tbl_concept.id'], ),
    sa.ForeignKeyConstraint(['uploader_fkey'], ['tbl_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_sheet_entry',
    sa.Column('id', sa.Unicode(length=32), nullable=False),
    sa.Column('scan_fkey', sa.Integer(), nullable=True),
    sa.Column('editor_fkey', sa.Integer(), nullable=True),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('data', sa.Unicode(), nullable=True),
    sa.Column('status', sa.Enum('Unchecked', 'Contains @', 'In Progress', 'Problematic', 'OK', 'Ignore', name='sheetEntryState'), nullable=True),
    sa.Column('comment', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['editor_fkey'], ['tbl_user.id'], ),
    sa.ForeignKeyConstraint(['scan_fkey'], ['tbl_scan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tbl_sheet_entry_scan_fkey'), 'tbl_sheet_entry', ['scan_fkey'], unique=False)
    op.create_table('tbl_sheet_entry_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sheet_entry_fkey', sa.Unicode(length=32), nullable=True),
    sa.Column('scan_fkey', sa.Integer(), nullable=True),
    sa.Column('editor_fkey', sa.Integer(), nullable=True),
    sa.Column('modification_date', sa.DateTime(), nullable=True),
    sa.Column('data', sa.Unicode(), nullable=True),
    sa.Column('comment', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['editor_fkey'], ['tbl_user.id'], ),
    sa.ForeignKeyConstraint(['scan_fkey'], ['tbl_scan.id'], ),
    sa.ForeignKeyConstraint(['sheet_entry_fkey'], ['tbl_sheet_entry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###
    op.execute(DDL("""\
CREATE OR REPLACE FUNCTION sheet_entry_log()
  RETURNS trigger AS
$BODY$
  BEGIN
  INSERT INTO tbl_sheet_entry_history values
    (default, OLD.id, OLD.scan_fkey, OLD.editor_fkey, OLD.modification_date, OLD.data, OLD.comment);
  NEW.modification_date = now();
  RETURN NEW;
  END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
"""))
    op.execute(DDL("""\
CREATE TRIGGER sheet_entry_update BEFORE UPDATE
ON tbl_sheet_entry
FOR EACH ROW EXECUTE PROCEDURE sheet_entry_log()
"""))

    

def downgrade():
    op.execute(DDL("""\
DROP TRIGGER sheet_entry_update on tbl_sheet_entry;
    """))
    op.execute(DDL("""\
DROP FUNCTION sheet_entry_log();
"""))
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tbl_sheet_entry_history')
    op.drop_index(op.f('ix_tbl_sheet_entry_scan_fkey'), table_name='tbl_sheet_entry')
    op.drop_table('tbl_sheet_entry')
    op.drop_table('tbl_scan')
    op.drop_table('tbl_concept')
    op.drop_table('tbl_user')
    ### end Alembic commands ###
